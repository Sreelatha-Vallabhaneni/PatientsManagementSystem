
services:
  backend:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    ports:
      - '5001:5001'
    volumes:
      - ./backend/api:/app
      - /app/node_modules
    environment:
      DATABASE_URL: ${DATABASE_URL}
    # environment:
    #   DATABASE_URL: "postgresql://postgres:postgres@db:5432/aisel?schema=public"
    # depends_on:
    #   db:
    #     condition: service_healthy
    command: >
      sh -c "
        sleep 10 &&
        npx prisma generate --schema=prisma/schema.prisma &&
        npx prisma db push --accept-data-loss --schema=prisma/schema.prisma &&
        npx ts-node src/prisma/seed.ts &&
        npm run start:dev
      "

  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: production
    command: npm run dev
    depends_on:
      - backend

  db:
    image: postgres:15.13
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aisel
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres-data:
